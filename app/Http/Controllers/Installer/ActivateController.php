<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.1   |
    |              on 2021-11-27 07:54:03              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Installer; use Exception; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; use Illuminate\Routing\Controller; class ActivateController extends Controller { public function activate() { if ($this->checkDatabaseConnection()) { goto YT1ll; } return redirect()->back()->withErrors(["\x64\x61\164\141\142\x61\x73\x65\x5f\143\157\156\x6e\x65\143\164\151\x6f\156" => trans("\151\156\x73\164\141\x6c\154\x65\x72\x5f\x6d\145\163\x73\x61\x67\x65\163\x2e\145\156\166\x69\162\x6f\x6e\155\145\x6e\164\x2e\167\151\172\x61\x72\144\x2e\146\x6f\x72\x6d\x2e\144\142\x5f\x63\157\x6e\x6e\145\143\164\x69\157\x6e\x5f\x66\141\x69\x6c\145\144")]); YT1ll: return view("\x69\x6e\x73\164\x61\154\x6c\x65\162\56\x61\143\x74\151\x76\141\164\x65"); } public function verify(Request $request) { $mysqli_connection = getMysqliConnection(); if ($mysqli_connection) { goto Pq05b; } return redirect()->route("\x49\x6e\163\x74\141\154\x6c\x65\162\56\141\x63\x74\151\x76\141\x74\x65")->with(["\x66\x61\x69\154\145\x64" => trans("\x72\x65\163\x70\x6f\156\163\x65\163\56\x64\x61\x74\141\142\141\163\x65\x5f\x63\157\156\156\x65\x63\x74\151\157\156\x5f\146\x61\x69\x6c\x65\x64")])->withInput($request->all()); Pq05b: $purchase_verification = aplVerifyEnvatoPurchase($request->purchase_code); if (empty($purchase_verification)) { goto OM3n4; } return redirect()->route("\111\x6e\x73\164\141\154\154\x65\162\56\x61\x63\x74\x69\166\141\164\145")->with(["\x66\x61\x69\154\x65\x64" => "\x43\157\x6e\156\x65\143\164\x69\157\x6e" . "\x20\164\x6f\x20\162\145\155\x6f\164\x65\40" . "\163\x65\162\166\145\x72\x20\143\x61\x6e\47\164\40\x62\145" . "\40\x65\x73\x74\141\x62\154\151\x73\x68\145\x64"])->withInput($request->all()); OM3n4: $license_notifications_array = incevioVerify($request->root_url, $request->email_address, $request->purchase_code, $mysqli_connection); if (!($license_notifications_array["\156\157\164\x69\146\x69\143\141\x74\151\x6f\x6e\x5f\143\x61\163\x65"] == "\x6e\x6f\x74\151\146\x69\143\141\x74\151\x6f\156\x5f\154\151\143\145\x6e\x73\x65\x5f\157\x6b")) { goto yCbQE; } return view("\x69\156\x73\164\141\154\x6c\145\162\56\x69\x6e\x73\x74\x61\x6c\154", compact("\154\x69\143\x65\156\163\x65\x5f\x6e\x6f\x74\151\x66\x69\143\x61\164\151\157\156\163\137\x61\x72\162\141\171")); yCbQE: if (!($license_notifications_array["\x6e\157\164\x69\146\151\143\141\x74\151\x6f\x6e\x5f\x63\141\163\x65"] == "\x6e\x6f\164\151\x66\151\x63\141\164\x69\x6f\x6e\x5f\141\x6c\x72\x65\x61\x64\171\x5f\x69\156\163\164\x61\154\x6c\145\x64")) { goto ruWHt; } $license_notifications_array = incevioAutoloadHelpers($mysqli_connection, 1); if (!($license_notifications_array["\x6e\x6f\x74\x69\146\151\143\141\164\151\x6f\156\137\x63\x61\163\145"] == "\156\157\164\151\146\151\x63\x61\x74\151\x6f\156\x5f\154\151\143\x65\156\x73\145\137\157\x6b")) { goto qnft2; } return view("\151\156\163\x74\x61\154\154\x65\162\56\x69\x6e\163\164\x61\x6c\x6c", compact("\x6c\x69\143\145\x6e\163\x65\137\156\x6f\164\x69\x66\x69\143\141\x74\151\x6f\156\x73\x5f\141\x72\162\x61\171")); qnft2: ruWHt: return redirect()->route("\x49\x6e\x73\x74\141\154\154\145\x72\56\141\143\x74\x69\x76\x61\x74\x65")->with(["\146\141\151\x6c\145\x64" => $license_notifications_array["\x6e\157\164\x69\x66\x69\143\141\164\151\157\156\137\164\x65\170\x74"]])->withInput($request->all()); } private function checkDatabaseConnection() { try { DB::connection()->getPdo(); return true; } catch (Exception $e) { return false; } } private function response($message, $status = "\144\x61\156\147\145\162") { return ["\x73\164\141\x74\x75\163" => $status, "\155\x65\x73\x73\x61\x67\x65" => $message]; } }
